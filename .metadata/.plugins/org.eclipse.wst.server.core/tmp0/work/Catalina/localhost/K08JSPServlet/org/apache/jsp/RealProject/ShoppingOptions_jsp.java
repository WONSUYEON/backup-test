/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2021-12-15 07:50:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.RealProject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ShoppingOptions_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("	\r\n");
      out.write("	//select를 선택하면 발생되는 change 이벤트를 통해 서버로 요청\r\n");
      out.write("	$('#goodsOptionId01').change(function() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"../ShoppingOptions.choice\",//요청URL\r\n");
      out.write("			type : \"get\", //전송방식\r\n");
      out.write("			data : {//파라미터 : select에서 선택한 값\r\n");
      out.write("				goodsOptionName : $(\"#goodsOptionId01\").val()\r\n");
      out.write("			},\r\n");
      out.write("			dataType : \"json\",//콜백데이터형식\r\n");
      out.write("			contentType : \"text/html;charset:utf-8\",\r\n");
      out.write("			\r\n");
      out.write("			success: function (d) {\r\n");
      out.write("				//성공시 기본가를 얻어온다\r\n");
      out.write("				var totalPrice = parseInt($('#totalPrice').val());\r\n");
      out.write("				//선택한 옵션의 value값을 얻어온다.\r\n");
      out.write("				var goodsOption = $('#goodsOptionId01').val();\r\n");
      out.write("				//옵션가에 따라 옵션가를 합산한다.\r\n");
      out.write("				if(goodsOption=='op01') totalPrice += 5000;\r\n");
      out.write("				else if(goodsOption=='op02') totalPrice += 7000;\r\n");
      out.write("				else if(goodsOption=='op03') totalPrice += 10000;\r\n");
      out.write("				//계산된 가격을 다시 hidden박스에 적용한다.\r\n");
      out.write("				$('#totalPrice').val(totalPrice);\r\n");
      out.write("				//웹브라우저에 총금액을 출력한다.\r\n");
      out.write("				$('#priceDisplay').html(\"총상품금액:\"+totalPrice);\r\n");
      out.write("				\r\n");
      out.write("				//콜백된 데이터를 통해 옵션 테이블을 생성한다.\r\n");
      out.write("				var table = ''\r\n");
      out.write("				+'<table class=\"table table-bordered\">'\r\n");
      out.write("				+'<tr>'\r\n");
      out.write("				+'		<td>옵션명:</td>'\r\n");
      out.write("				+'		<td>'+d.optionName+'</td>'\r\n");
      out.write("				+'</tr>'\r\n");
      out.write("				+'<tr>'\r\n");
      out.write("				+'		<td colspan=\"2\" class=\"info\">추가비용:'+d.optionPrice+'원</td>'\r\n");
      out.write("				+'</tr>'\r\n");
      out.write("				+'<table>';\r\n");
      out.write("				console.log(d)\r\n");
      out.write("				\r\n");
      out.write("				//웹브라우저에 추가한다.\r\n");
      out.write("				$('#goodsList').append(table);\r\n");
      out.write("				\r\n");
      out.write("				//옵션을 선택한 후 최초 상태로 리셋한다.\r\n");
      out.write("				$('#goodsOptionId01').val('');\r\n");
      out.write("				\r\n");
      out.write("			},\r\n");
      out.write("			error : function(e) {\r\n");
      out.write("				alert(\"실패\"+e.status)\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//썸네일 이미지에 마우스 오버시 대표이미지 변경됨.\r\n");
      out.write("function imgChange(imgSrc) {\r\n");
      out.write("	var bigImg = document.getElementById(\"bigImg\");\r\n");
      out.write("	//이미지의 경로 변경\r\n");
      out.write("	bigImg.src = \"../images/\" +imgSrc+\".png\";\r\n");
      out.write("	//이미지의 스타일속성을 통해 가로,세로 크기 변경\r\n");
      out.write("	bigImg.style.width= \"367px\";\r\n");
      out.write("	bigImg.style.height= \"286px\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("   	 <h2>쇼핑몰 옵션상품 구현하기</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("   	 <div class=\"col-md-6\">\r\n");
      out.write("   		 <table>\r\n");
      out.write("   			 <tr>\r\n");
      out.write("   				 <td colspan=\"3\"><img src=\"../images/amazon.png\" class=\"img-thumbnail\" id=\"bigImg\" /></td>\r\n");
      out.write("   			 </tr>\r\n");
      out.write("   			 <tr align=\"center\">\r\n");
      out.write("   				 <td><img src=\"../images/amazon.png\" class=\"img-thumbnail\" width=\"100\" onmouseover=\"imgChange('amazon');\"/></td>\r\n");
      out.write("   				 <td><img src=\"../images/chosun.png\" class=\"img-thumbnail\" width=\"100\" onmouseover=\"imgChange('chosun');\" /></td>\r\n");
      out.write("   				 <td><img src=\"../images/naver.png\" class=\"img-thumbnail\" width=\"100\" onmouseover=\"imgChange('naver');\" /></td>\r\n");
      out.write("   			 </tr>\r\n");
      out.write("   		 </table>\r\n");
      out.write("   	 </div>\r\n");
      out.write("   	 <div class=\"col-md-6\">\r\n");
      out.write("   		 <!-- 상품가격과 옵션 -->\r\n");
      out.write("   		 <form id=\"goodsFrm\">   		 \r\n");
      out.write("   		 <!-- 상품가격+옵션가격 -->\r\n");
      out.write("   		 <input type=\"hid-den\" id=\"totalPrice\" value=\"70000\" style=\"background-color:#bbbbbb;color:red;\"/>   		 \r\n");
      out.write("   		 <table class=\"table table-bordered\">\r\n");
      out.write("   		 <colgroup>\r\n");
      out.write("   			 <col width=\"30%\"/>\r\n");
      out.write("   			 <col width=\"*\"/>\r\n");
      out.write("   		 </colgroup>\r\n");
      out.write("   		 <tr>\r\n");
      out.write("   			 <td>상품명</td>\r\n");
      out.write("   			 <td>3 in 1 Type-C HDMI 케이블</td>\r\n");
      out.write("   		 </tr>\r\n");
      out.write("   		 <tr>\r\n");
      out.write("   			 <td>상품가격</td>\r\n");
      out.write("   			 <td><del>100,000원</del> -> 70,000원</td>\r\n");
      out.write("   		 </tr>\r\n");
      out.write("   		 <tr>\r\n");
      out.write("   			 <td>옵션선택1</td>\r\n");
      out.write("   			 <td>\r\n");
      out.write("   				 <select id=\"goodsOptionId01\">\r\n");
      out.write("   					 <option value=\"\">선택하삼</option>\r\n");
      out.write("   					 <option value=\"op01\">옵션1(+5000)</option>\r\n");
      out.write("   					 <option value=\"op02\">옵션2(+7000)</option>\r\n");
      out.write("   					 <option value=\"op03\">옵션3(+10,000)</option>\r\n");
      out.write("   				 </select>\r\n");
      out.write("   			 </td>\r\n");
      out.write("   		 </tr>   		 \r\n");
      out.write("   		 </table>\r\n");
      out.write("   		 </form>  \r\n");
      out.write("   		 <!-- 선택한 옵션상품이 디스플레이 되는 곳 --> 		 \r\n");
      out.write("   		 <div class=\"row\" id=\"goodsList\"></div>   		 \r\n");
      out.write("   		 <!-- 기본가격 + 옵션가격 -->\r\n");
      out.write("   		 <div class=\"row\" id=\"priceDisplay\"\r\n");
      out.write("   			 style=\"font-size:1.5em; color:red;\">\r\n");
      out.write("   			 총상품금액 : 70,000원\r\n");
      out.write("   		 </div>\r\n");
      out.write("   	 </div>\r\n");
      out.write("    </div>    \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
