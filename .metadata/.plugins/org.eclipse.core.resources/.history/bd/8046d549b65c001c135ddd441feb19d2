package servlet;

import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import membership.MemberDAO;
import membership.MemberDTO;

public class MemberAuth extends HttpServlet{
	MemberDAO dao;
	
	//서블릿 객체 생성시 최초 1번만 호출되는 수명주기 메소드
	@Override
	public void init() throws ServletException {
		/*
		 application 내장객체를 얻어옴. 모델2 방식에서는 서블릿이 먼저 요청을
		 받기 때문에 모델1 방식과 같이 JSP에서 매개변수 형태로 내장객체를 전달할 수 없다.
		 따라서 각 내장객체를 얻어올수 있는 메소드가 존재한다.
		 */
		
		ServletContext application = this.getServletContext();
		
		String driver = application.getInitParameter("OracleDriver");
		String connectUrl = application.getInitParameter("OracleURL");
		String oId = application.getInitParameter("oracleId");
		String oPass = application.getInitParameter("OraclePwd");
		
		dao = new MemberDAO(driver, connectUrl, oId, oPass);
	}
	
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String admin_id = this.getInitParameter("admin_id");
		
		String id = req.getParameter("id");
		String pass = req.getParameter("pass");
		
		MemberDTO memberDTO = dao.getMemberDTO(id, pass);
		
		String memberName = memberDTO.getName();
		if (memberName != null) {
			req.setAttribute("authMessage", memberName+ " 회원님 방가방가");
		}
		else {
			if (admin_id.equals(id))
				req.setAttribute("authMessage", admin_id + "회원님 방가방가");
			else
				req.setAttribute("authMessage", "귀하는 회원이 아닙니다");
	}
		
	req.getRequestDispatcher("/13Servlet/MemberAuth.jsp").forward(req, resp);
}
	@Override
	public void destroy() {
		dao.close();
	}
}